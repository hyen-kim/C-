==================================================================

4주차 

==================================================================

*) 전역변수 : 어디에서나 부르기 편한 변수 => 어디에서나 사용 가능한 변수
   로컬변수 : 함수내부에 있는 곳에서만 사용 가능 

else문은 한줄이라고 해도 괄호를 치는 것이 중요

strcmp의 형식은(문자,비교할문자)이고, 문자열을 비교하여 같으면 0을 반환

cin.getline()는 끝에 \0을 포함하고, 
엔터키를 치는 순간전까지 값을 입력받게 되고
(, , '-')하게 되었을시 '-' -를 하고 나서 문자를 입력하여도 입력되지 않는다.

형변환을 하는 atof(실수형), atoi(정수형)는 문자값이 들어오면 0을 반환한다.

표준 C++에서 헤더 파일 확장자(.h) 없고, std이름 공간 적시 
#include<헤더파일> : 표준
#include"헤더파일" : 우리가 작성



---------------------------------------> 2장 끝

< 4강 > : 3장 시작

1. C++ 클래스 작성
2. 객체를 생성, 활용
3. 생성자, 소멸자 작성

" 객체는 캡슐화 된다. " 

객체지향의 특성
1. 캡슐화 : 객체를 생성하였을 때 함부로 접근하지 못하게 하는 것
- 객체의 본질적인 특성
- 객체를 캡슐로 싸서 그 내부를 보호하고 볼 수 없게 함
- 목적 : 객체 내 데이터에 대한 보안, 보호, 외부 접근 제한

객체의 일부분 공개 
- 외부와의 인터페이스(정보 교환 및 통신)를 위해 객체의 일부분 공개
- TV 객체의 경우, On/Off 버튼, 발기 조절, 채널 조절, 음량 조절, 버튼 조절
  리모컨 객체와 통신하기 위함
=> 객체는 항상 인터페이스를 할 수 있어야한다.

" C++ 객체는 멤버 함수와 멤버 변수로 구성된다. "

객체는 상태와 행동으로 구성
 
객체 내부는 모두 멤버 변수인가 ? => 아니요
 
객체안에서 처리해서 쓰이는 함수를 멤버 함수라고 함
값을 저장해서 가지고 있는것이 멤버 변수, 
값을 가지고 처리하는 것이 멤버 함수라고 생각하면 됨


**********************************************

C++로 설계된 TV객체

bool on = true;
int channel = 8;
int volume = 16;
-----------------------> 멤버 변수


void powerOn();
void powerOff();
void increaseChannel();
void decreaseChannel();
void increaseVolume();
void decreaseVolume();
-----------------------> 멤버 함수 : 객체가 어떠한 행위를 할 수 있도록 해준 것


**********************************************


클래스 : 객체를 만들기 위해서는 반드시 선언	
- 객체를 만들어내기 위해 정의된 설계도, 틀
- 클래스는 객체가 아님, 실체도 아님
- 멤버 변수와 멤버 함수 선언

객체 : 고유의 특성을 가짐 
- 객체는 생성될 때 클래스의 모양을 그대로 가지고 탄생
- 멤버 변수와 멤버 함수로 구성
- 메모리에 생성, 실체(instance)라고도 부름
- 하나의 클래스 틀에서 찍어낸 여러 개의 객체 생성 가능
- 객체들은 상호 별도의 공간에 생성

ex) 사람을 만드는 과정을 클래스라고 보면 됨
    그것에 의해서 만들어진 사람이 객체


class 클래스명 {};



클래스 작성
- 멤버 변수와 멤버 함수로 구성
- 클래스 선언부와 클래스 구현부로 구성

클래스 선언부
- class 키워드를 이용하여 클래스 선언
- 멤버 변수와 멤버 함수 선언
  -> 멤버 변수는 클래스 선언 내에서 초기화 할 수 없음
  -> 멤버 함수는 원형 형태로 선언

- 멤버에 대한 접근 권한 지정
  -> private, public, protected 중의 하나
  -> 디폴트는 private => 아무나 접근할 수 없다.
  -> public : 다른 모든 클래스나 객체에서 멤버의 접근이 가능함을 표시

클래스 구현부 : 구체적으로 멤버 변수 사용, 소스코드 작성
- 클래스에 정의된 모든 '멤버 함수 구현'


클래스는 괄호 닫고 세미콜론 


=> 클래스 선언과 클래스 구현으로 분리하는 이유는
   클래스를 다른파일에서 활용하기 위해서



1. 객체 이름 및 객체 생성
클래스이름 객체이름 ;

2. 객체의 멤버 변수 접근
객체이름.멤버변수 = 값;

3. 객체의 멤버 함수 접근
객체이름.get멤버함수();



생성자 : 객체가 만들어질 때 단 한번 호출
- 객체가 생성되는 시점에서 자동으로 호출되는 멤버 함수
- 클래스 이름과 동일한 멤버 함수
=> 만들어짐과 동시에 호출

생성자의 목적
- 객체가 생성될 때 객체가 필요한 초기화를 위해

생성자 이름
- 반드시 클래스 이름과 동일

생성자는 리턴 타입을 선언하지 않는다.
- 리턴 타입 없음, void 타입도 안됨

객체 생성 시 오직 한 번만 호출
- 자동으로 호출됨, 임의로 호출할 수 없음, 각 개체마다 생성자 실행

생성자는 중복 가능
- 생성자는 한 클래스 내에 여러 개 가능
- 중복된 생성자 중 하나만 실행

생성자가 선언되어 있지 않으면 기본 생성자 자동으로 생성
- 기본 생성자 - 매개 변수 없는 생성자
- 컴파일러에 의해 자동 생성


소멸자 : 객체가 소멸될 때 호출되는 함수
- 객체가 소멸되는 시점에서 자동으로 호출되는 함수
- 오직 한번만 자동 호출, 임의로 호출할 수 없음
- 객체 메모리 소멸 직전 호출됨
- ~클래스명

소멸자의 목적
- 객체가 사라질 때 마무리 작업을 위함

소멸자 함수의 이름은 클래스 이름 앞에 ~를 붙임
소멸자는 리턴 타입이 없고, 어떤 값도 리턴하면 안됨
중복 불가능
소멸자가 선언되어 있지 않으면 기본 소멸자가 자동 생성






