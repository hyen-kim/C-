
==========================================================================

6주차 

==========================================================================

1. C++ 구조체
- 상속, 멤버, 접근 지정 등 모든 것이 클래스와 동일
- 클래스와 유일하게 다른 점
  -> 구조체의 디폴트 접근 지정 - public
  -> 클래스의 디폴트 접근 지정 - private
- C++ 에서 구조체를 수용한 이유 : C언어와의 호환성 때문
- 구조체 객체 생성 : struct 키워드 생략


2. 바람직한 C++ 프로그램 작성법
- 클래스를 헤더 파일과 cpp 파일로 분리하여 작성
  -> 클래스마다 분리 저장
  -> 클래스 선언부 : 헤더 파일(.h)에 저장
  -> 클래스 구현부 : cpp 파일에 저장
                   : 클래스가 선언된 헤더 파일 include
  -> main()등 전역 함수나 변수는 다른 cpp 파일에 분산 저장
                   : 필요하면 클래스가 선언된 헤더 파일 include 

- 목적 : 클래스 재사용
 

3. 헤더 파일을 중복 include 할 때 생기는 문제
#include "~.h"
#include "~.h" // 컴파일 오류 발생 : class 형식 재정의
#include "~.h" 

-> #ifndef ~_H
   #define ~_H
   
   ... 소스코드
   #endif

